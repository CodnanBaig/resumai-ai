import * as React from "react"
import { Document, Page, Text, View, StyleSheet, renderToBuffer } from "@react-pdf/renderer"

export interface CoverLetterData {
  content: string
  companyName?: string
  jobTitle?: string
}

// Professional cover letter styles
const styles = StyleSheet.create({
  page: {
    padding: 72,
    fontFamily: "Helvetica",
    fontSize: 12,
    lineHeight: 1.6,
    color: "#333",
  },
  header: {
    marginBottom: 40,
    borderBottom: "2px solid #2563eb",
    paddingBottom: 20,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    color: "#1e40af",
    marginBottom: 8,
    textAlign: "center",
  },
  subtitle: {
    fontSize: 16,
    color: "#6b7280",
    textAlign: "center",
    marginBottom: 20,
  },
  content: {
    marginBottom: 30,
  },
  paragraph: {
    marginBottom: 16,
    textAlign: "justify",
  },
  signature: {
    marginTop: 40,
    marginBottom: 20,
  },
  signatureLine: {
    borderTop: "1px solid #9ca3af",
    width: 200,
    marginTop: 8,
  },
  footer: {
    position: "absolute",
    bottom: 72,
    left: 72,
    right: 72,
    textAlign: "center",
    fontSize: 10,
    color: "#9ca3af",
    borderTop: "1px solid #e5e7eb",
    paddingTop: 20,
  },
})

function CoverLetterPDF({ data }: { data: CoverLetterData }) {
  const { content, companyName, jobTitle } = data
  
  // Split content into paragraphs
  const paragraphs = content.split('\n').filter(p => p.trim().length > 0)
  
  // Format the title
  const title = jobTitle && companyName 
    ? `Cover Letter for ${jobTitle} at ${companyName}`
    : jobTitle 
    ? `Cover Letter for ${jobTitle}`
    : companyName 
    ? `Cover Letter for ${companyName}`
    : "Cover Letter"

  return (
    <Document>
      <Page size="A4" style={styles.page}>
        {/* Header */}
        <View style={styles.header}>
          <Text style={styles.title}>{title}</Text>
          <Text style={styles.subtitle}>
            {new Date().toLocaleDateString('en-US', { 
              year: 'numeric', 
              month: 'long', 
              day: 'numeric' 
            })}
          </Text>
        </View>

        {/* Content */}
        <View style={styles.content}>
          {paragraphs.map((paragraph, index) => (
            <Text key={index} style={styles.paragraph}>
              {paragraph}
            </Text>
          ))}
        </View>

        {/* Signature */}
        <View style={styles.signature}>
          <Text>Sincerely,</Text>
          <View style={styles.signatureLine} />
        </View>

        {/* Footer */}
        <View style={styles.footer}>
          <Text>Generated by ResumeAI - Professional Resume & Cover Letter Builder</Text>
        </View>
      </Page>
    </Document>
  )
}

export async function createCoverLetterPdfBuffer(data: CoverLetterData): Promise<Buffer> {
  try {
    const element = React.createElement(CoverLetterPDF, { data })
    const buffer = await renderToBuffer(element)
    return Buffer.from(buffer)
  } catch (error) {
    console.error("Failed to generate cover letter PDF buffer:", error)
    throw new Error("Failed to generate cover letter PDF")
  }
}
